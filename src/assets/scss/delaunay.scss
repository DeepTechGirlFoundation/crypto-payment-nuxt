*{
	&::selection {
		color: var(--color_bg);
		background: var(--color_inner);
		text-decoration: underline;
	}
	&::-moz-selection {
		color: var(--color_bg);
		background: var(--color_inner);
	}
}

/* -----------------------
メディアクエリ
@include media(pc) {} //860px以上
@include media(tb) {} //860以下
@include media(sp) {} // 680以下
-----------------------*/
$tb: 1000px;
$sp: 680px;

@mixin media($media-width) {
	@if $media-width==sp {
		@media only screen and (max-width: $sp) {
			@content;
		}
	}

	@else if $media-width==tb {
		@media only screen and (max-width: $tb) {
			@content;
		}
	}

	@else if $media-width==pc {
		@media only screen and (min-width: $tb) {
			@content;
		}
	}
}

/* -----------------------

flex基本設定
 @include flex(space-between,center);

-----------------------*/
@mixin flex($jc: flex-start, $ai: stretch) {
	display: flex;
	flex-wrap: wrap;
	justify-content: $jc;
	align-items: $ai;
	width: 100%;
}

/* -----------------------

blogのindexなどのリスト組。ulなどwrapper要素ににつける
 @include list(3,2rem);

-----------------------*/
@mixin list($col: 3, $padd-lr: 2rem) {
	width: calc(100% - 1px + #{$padd-lr});
	margin-left: -$padd-lr / 2;

	&>* {
		width: 100% / $col;
		padding-left: $padd-lr / 2;
		padding-right: $padd-lr / 2;
	}
}

/* -----------------------

Grid for IE11
 @include flex(space-between,center);

-----------------------*/
@mixin grid($type, $start: 1, $span: 1) {
	@if $type=="column" {
		-ms-grid-column: $start;
		-ms-grid-column-span: $span;
		grid-column: $start / span $span;
	}

	@else {
		-ms-grid-row: $start;
		-ms-grid-row-span: $span;
		grid-row: $start / span $span;
	}
}

/* -----------------------

fontサイズを設定する (weightやfamilyは端折らず記載する)
@include font(pow(0, 700, 0.04em, 1.8, $ff);

-----------------------*/
@mixin font($size: 1rem, $weight: 400, $letter-spacing: 0.06em, $lign-height: 1.75, $family: "san-serif") {
	font: {
		size: $size;
		weight: $weight;
		family: $family;
	}

	letter-spacing: $letter-spacing;
	line-height: $lign-height;
}

/* -----------------------
べき乗の計算をする
-----------------------*/
@function pow($exp, $ratio: $font_ratio) {
	$base: $ratio;
	$value: 1;

	@if $exp >=1 {
		@for $i from 1 through $exp {
			$value: $value * $base;
		}
	}

	@else if $exp <=-1 {
		@for $i from 1 through -$exp {
			$value: $value / $base;
		}
	}

	@else {
		$value: 1;
	}

	@return $value;
}

/* -----------------------
remを整数に
-----------------------*/
@function rem($num) {
	@if $num =="auto" {
		@return "auto";
	}

	@else {
		$value: floor($num * $font_size_pc);
		@return $value;

		@if $value < 10px {
			$value: 10px;
		}
	}
}

@function rem_tb($num) {
	@if $num =="auto" {
		@return "auto";
	}

	@else {
		$value: floor($num * $font_size_tb);
		@return $value;

		@if $value < 10px {
			$value: 10px;
		}
	}
}

@function rem_sp($num) {
	@if $num =="auto" {
		@return "auto";
	}

	@else {
		$value: floor($num * $font_size_sp);
		@return $value;

		@if $value < 10px {
			$value: 10px;
		}
	}
}

@mixin font2($pow: 1, $weight: 400, $letter-spacing: 0.06em, $lign-height: 1.75, $family: "san-serif") {
	font-size: rem($pow);
	font-weight: $weight;
	font-family: $family;
	letter-spacing: $letter-spacing;
	line-height: $lign-height;

	@include media(tb) {
		font-size: rem_tb($pow);
		letter-spacing: 0.02em;
	}

	@include media(sp) {
		font-size: rem_sp($pow);
	}
}

@mixin rem_padding($top: 0, $right: 0, $bottom: 0, $left: 0) {
	padding: rem($top) rem($right) rem($bottom) rem($left);

	@include media(tb) {
		padding: rem_tb($top) rem_tb($right) rem_tb($bottom) rem_tb($left);
	}

	@include media(sp) {
		padding: rem_sp($top) rem_sp($right) rem_sp($bottom) rem_sp($left);
	}
}

@mixin rem_margin($top: 0, $right: 0, $bottom: 0, $left: 0) {
	margin: rem($top) rem($right) rem($bottom) rem($left);

	@include media(tb) {
		margin: rem_tb($top) rem_tb($right) rem_tb($bottom) rem_tb($left);
	}

	@include media(sp) {
		margin: rem_sp($top) rem_sp($right) rem_sp($bottom) rem_sp($left);
	}
}

/* -----------------------

icon画像を設定する
@include icon(150px, 12px, "../img/common/logo");

-----------------------*/
@mixin icon($width: 20px, $height: 20px, $path: "../img/icon/xxx") {
	display: inline-block;
	width: $width;
	height: $height;
	background-repeat: no-repeat;
	background-size: $width $height;
	background-position: center;
	background-image: url($path + ".png");
	background-image: url($path + ".svg");
	overflow: hidden;
	text-indent: -99999999px;
}

/* -----------------------

背景画像を設定する
@include img-cover("../img/_dummy/1.jpg");

-----------------------*/
@mixin img-cover($path: "../img/_dummy/1.jpg") {
	background-repeat: no-repeat;
	background-size: cover;
	background-position: center center;
	background-image: url($path);
}

/* -----------------------

画像など画角を設定する
@include ratio(66.6%);

-----------------------*/
@mixin ratio($padd: 66.6%) {
	position: relative;
	width: 100%;
	display: block;
	padding-top: $padd;
}

/* -----------------------

cleafix
@include clearfix;

-----------------------*/
@mixin clearfix {
	_height: 1px;
	min-height: 1px;

	/*・･*/
	/*/
  height: auto;
  overflow: hidden;
  /**/
	&:after {
		height: 0;
		visibility: hidden;
		content: ".";
		display: block;
		clear: both;
		font-size: 0;
		line-height: 0;
		overflow: hidden;
	}
}

// Round (四捨五入)
@function round-decimal($number, $digits: 0) {
	@return to-fixed($number, $digits, "round");
}

// Ceil (切り上げ)
@function ceil-decimal($number, $digits: 0) {
	@return to-fixed($number, $digits, "ceil");
}

// Floor (切り捨て)
@function floor-decimal($number, $digits: 0) {
	@return to-fixed($number, $digits, "floor");
}

@function to-fixed($number, $digits: 0, $round: "round") {
	$n: 1;

	// $number must be a number
	@if type-of($number) !=number {
		@warn '#{ $number } is not a number.';
		@return $number;
	}

	// $digits must be a unitless number
	@if type-of($digits) !=number {
		@warn '#{ $digits } is not a number.';
		@return $number;
	}

	@else if not unitless($digits) {
		@warn '#{ $digits } has a unit.';
		@return $number;
	}

	@for $i from 1 through $digits {
		$n: $n * 10;
	}

	@if $round =="round" {
		@return round($number * $n) / $n;
	}

	@else if $round =="ceil" {
		@return ceil($number * $n) / $n;
	}

	@else if $round =="floor" {
		@return floor($number * $n) / $n;
	}

	@else {
		@warn '#{ $round } is undefined keyword.';
		@return $number;
	}
}

//-------------------------------------
// べき乗するための関数群
// https://github.com/terkel/mathsass
//-------------------------------------
$LN2: 0.6931471805599453;
$SQRT2: 1.4142135623730951;

@function frexp($x) {
	$exp: 0;

	@if $x < 0 {
		$x: $x * -1;
	}

	@if $x < 0.5 {
		@while $x < 0.5 {
			$x: $x * 2;
			$exp: $exp - 1;
		}
	}

	@else if $x >=1 {
		@while $x >=1 {
			$x: $x / 2;
			$exp: $exp +1;
		}
	}

	@return $x,
	$exp;
}

@function ldexp($x, $exp) {
	$b: if($exp >=0, 2, 1 / 2);

	@if $exp < 0 {
		$exp: $exp * -1;
	}

	@while $exp >0 {
		@if $exp % 2==1 {
			$x: $x * $b;
		}

		$b: $b * $b;
		$exp: floor($exp * 0.5);
	}

	@return $x;
}

@function log($x, $b: null) {
	@if $b  !=null {
		@return log($x) / log($b);
	}

	@if $x <=0 {
		@return 0 / 0;
	}

	$k: nth(frexp($x / $SQRT2), 2);
	$x: $x / ldexp(1, $k);

	@return $LN2 * $k +_log($x);
}

@function _log($x) {
	$x: ($x - 1) / ($x + 1);
	$x2: $x * $x;
	$i: 1;
	$s: $x;
	$sp: null;

	@while $sp  !=$s {
		$x: $x * $x2;
		$i: $i +2;
		$sp: $s;
		$s: $s +$x / $i;
	}

	@return 2 * $s;
}

@function _exp($x) {
	$ret: 0;
	$i: 1;

	@for $n from 0 to 24 {
		$ret: $ret +$i;
		$i: $i * $x / ($n + 1);
	}

	@return $ret;
}



/* --------------------------------------------
Setting Font - フォント設定
--------------------------------------------*/
$en_go: "Poppins", sans-serif;

$ff: $en_go; //基本フォント
$lh: 1.5; //基本行間
$fw: 400; //基本文字太さ
$ls: 0.02em; //基本文字間
$font_size_pc: 16px; //PCフォントサイズ
$font_size_tb: 15px; //TBフォントサイズ
$font_size_sp: 14px; //フォントサイズ
$font_ratio: 1.33;
$trans: 200ms;
$trans_long: 400ms;




/* --------------------------------------------
Setting Content - コンテンツ設定
@extend .common_width
--------------------------------------------*/
// エクステンドで使う
.common_width {
	width: 90%;
	max-width: 1200px;
	margin-left: auto;
	margin-right: auto;
	position: relative;
	@include media(tb) {
		width: 86%;
	}

	@include media(sp) {
		width: 90%;
	}
}

.section__wrap {
	@extend .common_width;
}


.show_pc {
	display: block;

	@include media(tb) {
		display: none;
	}

	@include media(sp) {
		display: none;
	}
}

.show_pctb {
	display: block;

	@include media(tb) {
		display: block;
	}

	@include media(sp) {
		display: none;
	}
}

.show_tbsp {
	display: none;

	@include media(tb) {
		display: block;
	}

	@include media(sp) {
		display: block;
	}
}

.show_tb {
	display: none;

	@include media(tb) {
		display: block;
	}

	@include media(sp) {
		display: none;
	}
}

.show_sp {
	display: none;

	@include media(tb) {
		display: none;
	}

	@include media(sp) {
		display: block;
	}
}

#wrapAll {
	width: 100%;
	position: relative;
	overflow: hidden;

	main {
		width: 100%;
	}
}

* {
	-webkit-tap-highlight-color: rgba(255, 255, 255, 0);
	-webkit-font-feature-settings: "palt" 1; // for Android 4.4
	font-feature-settings: "palt" 1;
	box-sizing: border-box;
}

::selection {
	color: var(--Title);
	background: var(--Light);
	text-decoration: underline;
}

::-moz-selection {
	color: var(--Title);
	background: var(--Light);
}

img {
	display: block;
	width: 100%;
	user-select: none;
	-moz-user-select: none;
	-webkit-user-select: none;
	-ms-user-select: none;
}

table {
	border-collapse: collapse;
	border-spacing: 0;
}

span,
i {
	font-size: inherit;
	color: inherit;
	line-height: inherit;
	letter-spacing: inherit;
	font-weight: inherit;
}

a {
	text-decoration: none;
	display: inline-block;
	cursor: pointer;
	color: var(--Title);
	// &:visited {
	//   color: var(--Title);
	//   text-decoration: none;
	// }
	// &:hover {
	//   color: var(--Title);
	//   text-decoration: none;
	// }
}

select,
input,
textarea,
button {
	cursor: pointer;
	box-sizing: border-box;
	outline: none;
	border-radius: 0;
	appearance: button;
	border: none;
	background-color: transparent;
}

textarea {
	resize: vertical;
	overflow: auto;
}

input+label {
	cursor: pointer;
}
